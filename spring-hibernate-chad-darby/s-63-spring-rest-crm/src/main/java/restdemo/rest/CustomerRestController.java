package restdemo.rest;

import restdemo.entity.Customer;
import restdemo.exceptions.CustomerNotFoundException;
import restdemo.service.CustomerService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;


@RestController
@RequestMapping("/api")
public class CustomerRestController {

    // autowire CustomerService
    @Autowired
    private CustomerService customerService;


    @GetMapping("/customers")
    public List<Customer> getCustomers() {
        return customerService.getCustomers();
    }

    @GetMapping("/customers/{customerId}")
    public Customer getOneCustomer(@PathVariable int customerId) {
        Customer customer = customerService.getCustomer(customerId);

        if(customer == null) {
            throw new CustomerNotFoundException("Customer with id " + customerId + " can't be found");
        }

        return customer;
    }

    @PostMapping("/customers")
    public Customer insertCustomer(@RequestBody Customer customer) {
        // for a new customer, Hibernate accepts an id 0 (empty) to insert a new customer (instead of update).
        // In DB the id of the customer will be autogenerated
        customer.setId(0);
        customerService.saveCustomer(customer);
        return customer;
    }

    @PutMapping("/customers")
    public Customer updateCustomer(@RequestBody Customer customer) {
        // to update, we will leave id the same. Hibernate will know to update the entry with that id (already set)
        customerService.saveCustomer(customer);
        return customer;
    }

    @DeleteMapping("/customers/{customerId}")
    public String deleteCustomer(@PathVariable int customerId) {
        // verify if the customer exists
        Customer tempCustomer = customerService.getCustomer(customerId);
        if (tempCustomer == null) {
            throw  new CustomerNotFoundException("Customer with ID " + customerId + " was not found");
        }

        customerService.deleteCustomer(customerId);
        return "Customer with ID " + customerId + " was deleted";
    }
}
